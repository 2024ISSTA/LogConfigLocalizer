,name,value,description
0,yarn.application.classpath,,
1,dfs.datanode.ec.reconstruct.read.bandwidthPerSec,0,"Specifies the maximum amount of bandwidth that the EC reconstruction can utilize for reading.
      When the bandwidth value is zero, there is no limit."
2,dfs.webhdfs.ugi.expire.after.access,600000,"How long in milliseconds after the last access
      the cached UGI will expire. With 0, never expire."
3,yarn.nodemanager.localizer.fetch.thread-count,4,
4,dfs.namenode.top.window.num.buckets,10,Number of buckets in the rolling window implementation of nntop
5,mapreduce.jobhistory.client.thread-count,10,The number of threads to handle client API requests
6,dfs.namenode.stale.datanode.interval,30000,"Default time interval in milliseconds for marking a datanode as ""stale"",
    i.e., if the namenode has not received heartbeat msg from a datanode for
    more than this time interval, the datanode will be marked and treated 
    as ""stale"" by default. The stale interval cannot be too small since 
    otherwise this may cause too frequent change of stale states. 
    We thus set a minimum stale interval value (the default value is 3 times 
    of heartbeat interval) and guarantee that the stale interval cannot be less
    than the minimum value. A stale data node is avoided during lease/block
    recovery. It can be conditionally avoided for reads (see
    dfs.namenode.avoid.read.stale.datanode) and for writes (see
    dfs.namenode.avoid.write.stale.datanode)."
7,dfs.namenode.write-lock-reporting-threshold-ms,5000,"When a write lock is held on the namenode for a long time,
    this will be logged as the lock is released. This sets how long the
    lock must be held for logging to occur."
8,fs.permissions.umask-mode,22,"The umask used when creating files and directories.
    Can be in octal or in symbolic. Examples are:
    ""022"" (octal for u=rwx,g=r-x,o=r-x in symbolic),
    or ""u=rwx,g=rwx,o="" (symbolic for 007 in octal)."
9,dfs.datanode.lazywriter.interval.sec,60,Interval in seconds for Datanodes for lazy persist writes.
