,name,value,description
0,fs.default.name,,
1,hadoop.security.kms.client.failover.sleep.max.millis,2000,"Expert only. The time to wait, in milliseconds, between failover
    attempts increases exponentially as a function of the number of
    attempts made so far, with a random factor of +/- 50%. This option
    specifies the maximum value to wait between failovers.
    Specifically, the time between two failover attempts will not
    exceed +/- 50% of hadoop.security.client.failover.sleep.max.millis
    milliseconds."
2,dfs.blockreport.incremental.intervalMsec,0,"If set to a positive integer, the value in ms to wait between sending
    incremental block reports from the Datanode to the Namenode."
3,ipc.[port_number].scheduler.priority.levels,4,"How many priority levels to use within the scheduler and call
    queue. This property applies to RpcScheduler and CallQueue."
4,ha.failover-controller.graceful-fence.rpc-timeout.ms,5000,Timeout that the FC waits for the old active to go to standby
5,yarn.nodemanager.logaggregation.threadpool-size-max,100,
6,mapreduce.reduce.skip.maxgroups,0,"The number of acceptable skip groups surrounding the bad
    group PER bad group in reducer. The number includes the bad group as well.
    To turn the feature of detection/skipping of bad groups off, set the
    value to 0.
    The framework tries to narrow down the skipped range by retrying
    until this threshold is met OR all attempts get exhausted for this task.
    Set the value to Long.MAX_VALUE to indicate that framework need not try to
    narrow down. Whatever groups(depends on application) get skipped are
    acceptable."
7,yarn.scheduler.minimum-allocation-mb,1024,
8,yarn.client.nodemanager-connect.retry-interval-ms,10000,
9,mapreduce.task.combine.progress.records,10000,"The number of records to process during combine output collection
   before sending a progress notification."
